
# Project Structure and Development Guide

## Using Cursor for Development

- **Cursor Rules:**
  - Always use the built-in code navigation and search features to find components, styles, and logic.
  - When editing, prefer making small, focused commits and documenting your changes.
  - Use the semantic search to understand how components interact, especially for styling and theming.
  - Follow the monorepo structure: shared packages are in `packages/`, main app in `apps/web/`.

## Dark Mode, Styling, and Components

### Dark Mode
- Dark mode is managed via CSS variables and/or Tailwind CSS (if enabled in the project).
- The global styles are defined in `apps/web/app/globals.css` and `apps/web/styles/`.
- If using Tailwind, dark mode is typically toggled via a `dark` class on the `<html>` or `<body>` element.
- Check for a context/provider or a toggle component in `components/ui/` or `providers/` for dark mode logic.

### Styling
- Styles are organized in `apps/web/styles/` (global, variables, and index files).
- Component-specific styles may use CSS Modules (e.g., `Onboarding.module.scss`) or inline styles.
- Shared styles for the monorepo may be in `packages/tailwind-config/shared-styles.css`.
- Use semantic class names and prefer CSS Modules or Tailwind for new components.

### Components
- UI components are in `apps/web/components/`.
  - `ui/` contains layout/navigation (Navbar, Sidebar, BottomBar).
  - `small/` contains atomic elements (Card, Gradient, etc.).
  - `onboarding/` and `privy/` are feature-specific.
- Shared UI primitives may be in `packages/ui/src/`.
- Compose components by importing from these folders, following the atomic design principle where possible.

### Tips for Cursor Users
- Use "Go to Definition" and "Find References" to trace component usage and styling.
- Use the semantic search to answer questions like "How is dark mode toggled?" or "Where is the Card component styled?"
- When in doubt, check the README or ask in the team chat for guidance.
